generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
  output          = "../src/shared/lib/prisma/generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Country {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  Media Media[] @relation("MediaCountries")
}

model Genre {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  Media Media[] @relation("MediaGenres")
}

model Media {
  id                Int             @id
  imdb_id           String?
  tmdb_id           Int?
  title             String
  description       String
  short_description String?
  slogan            String?
  type              MediaType
  is_series         Boolean?
  status            Status?
  year              Int
  rating_kp         Float
  rating_age        Int?
  rating_imdb       Float?
  rating_tmdb       Float?
  votes_kp          Int
  votes_imdb        Int?
  votes_tmdb        Int?
  movie_length      Int?
  poster            String
  backdrop          String?
  logo              String?
  top_10            Int?
  top_250           Int?
  series_length     Int?
  updated_at        DateTime        @default(now())
  created_at        DateTime        @default(now())
  PersonInMedia     PersonInMedia[]
  Country           Country[]       @relation("MediaCountries")
  Genre             Genre[]         @relation("MediaGenres")
}

model Person {
  id            Int             @id
  photo         String?
  name          String
  PersonInMedia PersonInMedia[]
}

model PersonInMedia {
  media_id    Int
  person_id   Int
  description String?
  profession  String?
  Media       Media   @relation(fields: [media_id], references: [id])
  Person      Person  @relation(fields: [person_id], references: [id])

  @@id([media_id, person_id])
}

enum MediaType {
  movie
  tv_series
  anime
  cartoon
  animated_series
}

enum Status {
  announced
  completed
  filming
  post_production
  pre_production
}
